# ArcGIS Pro Modelbuilder to calculate average distance between two lines. Inaccurate due to method using "Nearest Point" and not perpendicular lines



# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2024-12-20 13:03:46
"""
import arcpy
from sys import argv

#For inline variable substitution, parameters passed as a String are evaluated using locals(), globals() and isinstance(). To override, substitute values directly.
def ADTEST(Older_Shore, Newer_Shore, Table_Suffix):  # ADTEST

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    arcpy.ImportToolbox(r"c:\program files\arcgis\pro\Resources\ArcToolbox\toolboxes\Data Management Tools.tbx")

    # Process: Pairwise Intersect (Pairwise Intersect) (analysis)
    PairwiseIntersect = "C:\\JessicaWorking\\Tuktoyaktuk\\Tuktoyaktuk Coastline Digitization\\Accumulation.gdb\\PairwiseIntersect"
    arcpy.analysis.PairwiseIntersect(in_features=[Older_Shore, Newer_Shore], out_feature_class=PairwiseIntersect, output_type="POINT")

    # Process: Split Line at Point (Split Line at Point) (management)
    PairwiseInters = f"{arcpy.env.workspace}/PairwiseInters"
    arcpy.management.SplitLineAtPoint(in_features=Older_Shore.__str__().format(**locals(),**globals())if isinstance(Older_Shore, str) else Older_Shore, point_features=PairwiseIntersect, out_feature_class=PairwiseInters, search_radius="2 Meters")

    # Process: Add Field (Add Field) (management)
    PairwiseInters_SplitLineAtPo_4_ = arcpy.management.AddField(in_table=PairwiseInters, field_name="SIDE", field_type="SHORT", field_alias="SIDE", field_is_nullable="NULLABLE")[0]

    # Process: Calculate Field (Calculate Field) (management)
    PairwiseInters_SplitLineAtPo_3_ = arcpy.management.CalculateField(in_table=PairwiseInters_SplitLineAtPo_4_, field="SIDE", expression="(!ORIG_SEQ!%2) * 2 -1")[0]

    # Process: Generate Points Along Lines (Generate Points Along Lines) (management)
    PairwiseInters_GeneratePointsAlongLines = "C:\\JessicaWorking\\Tuktoyaktuk\\Tuktoyaktuk Coastline Digitization\\Accumulation.gdb\\PairwiseInters_GeneratePointsAlongLines"
    if PairwiseInters_SplitLineAtPo_3_:
        arcpy.management.GeneratePointsAlongLines(Input_Features=PairwiseInters, Output_Feature_Class=PairwiseInters_GeneratePointsAlongLines, Point_Placement="DISTANCE", Distance="1 Meters")

    # Process: Near (Near) (analysis)
    if PairwiseInters_SplitLineAtPo_3_:
        Updated_Input_Features = arcpy.analysis.Near(in_features=PairwiseInters_GeneratePointsAlongLines, near_features=[Newer_Shore], field_names=[["NEAR_DIST", "DIST"]], distance_unit="Meters")[0]

    # Process: Calculate Field (2) (Calculate Field) (management)
    if PairwiseInters_SplitLineAtPo_3_:
        PairwiseInters_SplitLineAtPo_GeneratePointsAlongLines1 = arcpy.management.CalculateField(in_table=Updated_Input_Features, field="DIST", expression="!DIST!*!SIDE!", field_type="DOUBLE")[0]

    # Process: Summary Statistics (Summary Statistics) (analysis)
    ShorelineMovement_Table_Suffix_ = f"{arcpy.env.workspace}/ShorelineMovement_{Table_Suffix}"
    if PairwiseInters_SplitLineAtPo_3_:
        arcpy.analysis.Statistics(in_table=PairwiseInters_SplitLineAtPo_GeneratePointsAlongLines1, out_table=ShorelineMovement_Table_Suffix_, statistics_fields=[["DIST", "MEAN"], ["DIST", "MEDIAN"], ["DIST", "RANGE"], ["DIST", "MIN"], ["DIST", "MAX"]])

if __name__ == '__main__':
    # Global Environment settings
    with arcpy.EnvManager(scratchWorkspace="C:\\JessicaWorking\\Tuktoyaktuk\\Tuktoyaktuk Coastline Digitization\\Accumulation.gdb", workspace="C:\\JessicaWorking\\Tuktoyaktuk\\Tuktoyaktuk Coastline Digitization\\Accumulation.gdb"):
        ADTEST(*argv[1:])
